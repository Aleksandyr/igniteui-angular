@mixin hide-default
{
  position       : absolute;
  opacity        : 0;
  margin         : 0;
  z-index        : -1;
  width          : 0;
  height         : 0;
  left           : 0;
  overflow       : hidden;
  pointer-events : none;
}

@mixin linear-gradient($direction, $color-stops...) {
  // Direction has been omitted and happens to be a color-stop
  @if is-direction($direction) == false
  {
    $color-stops : $direction, $color-stops;
    $direction : 180deg;
  }

  background : nth(nth($color-stops, 1), 1);
  background : -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background : linear-gradient($direction, $color-stops);
}

@mixin clearfix() {
  &
  {
    *zoom : 1;
  }

  &:before, &:after
  {
    content : "";
    display : table;
  }

  &:after
  {
    clear : both;
  }
}

/* Retina Images */
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio : 1.3),
  (-o-min-device-pixel-ratio : 2.6/2),
  (-webkit-min-device-pixel-ratio : 1.3),
  (min-device-pixel-ratio : 1.3),
  (min-resolution : 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image : url($image);
    background-size  : $width $height;
  }
}

/*
Example
  div.logo {
   background: url("logo.png") no-repeat;
   @include image-2x("logo2x.png", 100px, 25px);
 }
*/

/* Border radius */

@mixin border-radius($radius) {
  -webkit-border-radius : $radius;
  border-radius         : $radius;
  background-clip       : padding-box; /* stops bg color from leaking outside the border: */
}



