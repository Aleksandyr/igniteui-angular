.badge,.fork{text-transform:uppercase}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}h1,h2{font-weight:300}article,aside,details,figcaption,figure,footer,header,menu,nav,section{display:block}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}.code-snipet:before,.dropdown:before,.section-from-left:after,.section-from-left:before{content:""}table{border-collapse:collapse;border-spacing:0}.flex-container{display:-moz-flex;display:-ms-flexbox;display:flex}.flex-column{display:-moz-flex;display:-ms-flexbox;display:flex;-moz-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.center-horizontal{-ms-flex-align:center;-moz-align-items:center;align-items:center}.justify-content-b{-ms-flex-pack:justify;-moz-justify-content:space-between;justify-content:space-between}.justify-content-center{-ms-flex-pack:center;-moz-justify-content:center;justify-content:center}.justify-content-end{-ms-flex-pack:end;-moz-justify-content:flex-end;justify-content:flex-end}.justify-content-start{-ms-flex-pack:start;-moz-justify-content:flex-start;justify-content:flex-start}.base-line-bottom{-ms-flex-align:end;-moz-align-items:flex-end;align-items:flex-end}.base-line-center{-ms-flex-align:center;-moz-align-items:center;align-items:center}.flex-wrap{-ms-flex-wrap:wrap;flex-wrap:wrap}.svg-icon{width:2em;height:2em}.github{fill:#fff;fill-rule:evenodd}.btn{padding:.4375em .9375em;border-radius:.125em;border:none;background:#ff6978;font-size:16px;font-family:Titillium Web;color:#fff;font-style:normal;background-clip:padding-box;box-shadow:0 8px 12px 0 rgba(173,173,173,.38);cursor:pointer;transition:background .3s ease}.section-from-left:before,.section-from-right:before,.section-wrap{box-shadow:0 8px 25px 0 rgba(0,0,0,.19)}.btn:hover{background:#ff5061}.special-position{position:absolute;bottom:.9375em;right:.9375em}.special-position span{margin:.3125em 0}body{line-height:1;background:#eee;font-family:'Titillium Web',sans-serif;overflow-x:hidden}*,:after,:before{box-sizing:border-box}.wrapper{max-width:980px;padding:0 20px;margin:0 auto}.fork{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;text-decoration:none;transition:opacity .3s ease}.nav-list a,.tabs a{transition:color .3s ease;text-decoration:none;cursor:pointer}.fork span{margin-right:.3125em;color:#fff}.fork:hover{opacity:.75}h1{font-size:2.5em;line-height:1.2}h2{font-size:1.4375em;line-height:1.6}.mobile-subheader,h3{line-height:1.6;font-weight:400}h3{color:#ff6978;font-size:1.5em}.mobile-subheader{color:#999;font-size:1em;margin:.625em 0}.section-wrap .componentTitle{font-size:2.125em;font-weight:100;color:#0375be;margin-bottom:20px}.section-wrap .componentDesc{font-size:18px;font-weight:300;color:#757575;margin-bottom:20px;line-height:28px}.section-wrap .component-wrap{margin-bottom:20px}.section-wrap .component-wrap ig-radio,.section-wrap .component-wrap ig-switch{margin-bottom:.625em;display:block}::-moz-selection{color:#000;background:#ffcfd4}::selection{color:#000;background:#ffcfd4}.logo{position:relative;display:inline-block;height:6.0625em}.logo h1{display:none}img{-webkit-user-select:none;-moz-user-select:none;-o-user-select:none;-ms-user-select:none;user-select:none}.header-bkg{background:url(../../demos/images/bkg.jpg) top no-repeat;min-height:500px;padding-top:2.5em;margin-bottom:9.375em}.banner-message,.main-header{margin-bottom:4.375em}.banner-message{color:#fff;max-width:60%}.code-section-header{border-bottom:2px solid #ff6978;padding:1.25em;margin:-1.25em -1.25em 0}.section-wrap{background:#fff;min-height:17.5em;margin-bottom:13.75em;position:relative;padding:1.25em}.section-wrap h1{color:#ff6978}.section-wrap h2{font-weight:100;color:#757575}.section-wrap h2 strong{color:#666;font-weight:400}.section-img{position:absolute;-ms-flex:1;flex:1;z-index:2}.reflection-image{z-index:3;top:-3.3125em;left:.3125em;pointer-events:none;filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='../img/reflection.png', sizingMethod='scale');background:0 0!important}.phons-image{top:-6.25em;left:-1.75em;filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='../img/phones.png', sizingMethod='scale');background:0 0!important}.phon-image{top:-5.375em;right:0;width:18.625em}.section-message{position:relative;right:0;-ms-flex:1;flex:1}.section-from-left{padding-left:25em;position:relative;z-index:1}.section-from-left button{margin-right:.625em}.section-from-left button:last-of-type{margin-right:0}.section-from-left .buttons-wrap{-ms-flex-pack:end;-moz-justify-content:flex-end;justify-content:flex-end}.section-from-left:after,.section-from-left:before{position:absolute;height:100%;width:6249.9375em;background:#fff}.section-from-left:before{right:100%;top:0;z-index:0}.section-from-left:after{right:90%;top:0;z-index:1}.section-from-right{padding-right:23.125em;position:relative;z-index:1}.section-from-right .section-message header{margin-bottom:1.25em}.section-from-right:after,.section-from-right:before{content:"";position:absolute;height:100%;width:6249.9375em;background:#fff}.section-from-right:before{left:100%;top:0;z-index:0}.section-from-right:after{left:90%;top:0;z-index:1}.nav-components{min-width:16.25em}.phon-preview{width:18.3125em;height:37.875em;position:absolute;right:0;-ms-flex:1;flex:1;z-index:2}.dropdown,.nav-list a,.nav-list li{position:relative}.preview-container{position:relative;overflow-x:hidden;overflow-y:auto;z-index:2;width:278px;height:477px;left:5px;top:-7px;padding:.625em .625em 0}.ig-list__header,.ig-list__item{padding:0}.main-footer{padding:1.875em;background:#272727;min-height:8.75em}.main-footer>div{min-height:8.75em;height:8.75em}.main-footer .fork{margin:0 auto;width:10em}.main-footer small{font-size:.625em;color:#a1a1a1;margin:0 1.25em .375em}.small-ing,.smll-ig-logo,.smll-z-logo{overflow:hidden;display:block;background-repeat:no-repeat}.dropdown,.dropdown option[disabled]{display:none}.smll-z-logo{width:3.5em;height:1.875em}.smll-ig-logo{width:5.5625em;height:1.875em}.smll-ig-logo img{width:100%;height:auto}.small-ing{width:8.6875em;height:1.25em}.nav-list li{padding:.625em}.nav-list a{color:#757575;font-size:1.4375em;font-weight:100}.nav-list .active a:hover,.nav-list a:hover{color:#0375be}.nav-list .active a{color:#0375be;font-weight:400}.tabs .active,.tabs .active:hover{color:#ff6978}.tabs a{font-weight:600;color:#272727}.tabs a~a{margin-left:.625em}.tabs a:hover{color:#ff9ca6}.dropdown{-moz-flex:1;-ms-flex:1;flex:1}.dropdown:before{position:absolute;top:calc(50% - 4px);right:15px;z-index:2;width:0;height:0;border-style:solid;border-width:8px 5.5px 0;border-color:#fff transparent transparent;pointer-events:none}.dropdown select{padding:7px 15px;width:100%;background:#ff6978;color:#fff;border:none;box-shadow:none;-webkit-appearance:none;text-overflow:"";text-indent:.01px;-moz-appearance:none;border-radius:.125em;font-size:16px;font-family:Titillium Web;position:relative;z-index:1}.dropdown option{background:#fff;color:#272727;padding:.625em}.badge.beta,.dropdown optgroup{background:#fff;color:#ff6978}.dropdown select:focus{outline:0}.badge{padding:2px 5px 1px 4px;position:absolute;font-size:10px;font-weight:400}.badge.beta{left:calc(100% + 5px);top:50%}.badge.preview{left:calc(100% + 10px);top:calc(50% - 7px);background-image:linear-gradient(105deg,#e41c77,#fbb13c);color:#fff}.line-numbers .line-numbers-rows{border:none;background:#f5f5f5;left:-2.5em;width:2em}pre[class*=language-]{padding:0 20px 0 36px!important}.code-snipet pre{background:0 0;font-size:14px;margin:0 -20px}.code-snipet{padding-top:.625em}.code-snipet:before{width:30px;height:calc(100% - 58px);background:#f5f5f5;position:absolute;left:0;top:58px}.line-numbers-rows>span:before{padding:0;text-align:center}.language-markup:empty:after{content:"No markup preview for this example"}.language-typescript:empty:after{content:"No type script preview for this example"}.language-markup:empty,.language-typescript:empty{height:100px;display:block}.language-markup:empty:after,.language-typescript:empty:after{position:absolute;font-size:18px;color:#999;text-align:center;width:100%}.ig-tab-bar-inner{position:static}.ig-tab-bar-inner__menu{position:absolute;left:0}.ig-nav-drawer{position:absolute}.sample-content button{background-color:#ff6978;color:#fff;padding:5px 10px;margin:5px 5px 5px 0}.sample-content input{margin:5px 5px 5px 0;border:1px solid #ddd;border-radius:3px;-webkit-border-radius:3px;padding:0 5px}.sample-content input[type=text]{font-size:1em;width:calc(100% - 53px)}.sample-content label{margin:5px 5px 5px 0;display:block}.ripple-wrapper ig-list-item{cursor:pointer}.hamburger{margin-bottom:.625em;display:block}.ig-drawer-content{padding:0 1em}.ig-drawer-content .in-menu-item{cursor:pointer;margin-bottom:1em}.ig-drawer-content .in-menu-item image{width:1.5em}.ig-drawer-content .in-menu-item a{margin-left:1.5625em;font-weight:400;color:rgba(0,0,0,.87)}.space-wrapper{padding-bottom:2.5em}.space-wrapper ig-avatar,.space-wrapper>span{margin:.3125em}.ig-drawer-mini-content{padding-top:1.25em}.ig-nav-drawer.pinned{height:auto!important}.ig-form-group{margin:.625em 0}.ig-form-group:first-of-type{margin-top:0}.ig-button--gradient,.ig-button--raised{max-height:32px}.ig-button,.ig-button--flat,.ig-button--gradient,.ig-button--raised{max-width:100%;width:100%;margin-bottom:.625em}@media only screen and (max-width:820px){.section-from-left .buttons-wrap{-ms-flex-pack:start;-moz-justify-content:flex-start;justify-content:flex-start}.banner-message{max-width:80%}}@media only screen and (max-width:500px){.logo{margin-bottom:2.5em;left:-1em}.header-bkg .main-header{-moz-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;-moz-align-items:center;align-items:center}h1{font-size:1.875em}h2,h3{font-size:1.125em}}@media only screen and (max-width:769px){.dropdown,.header-bkg,.logos-wrap .group-logos,.section-message header,.section-wrap{margin-bottom:1.25em}.main-footer>div{height:auto}.logos-wrap{-moz-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.phon-preview{position:relative;width:100%;height:auto}.preview-container{width:100%;height:auto;min-height:40px;left:0;top:0;padding:0 0 4.0625em}.dropdown{display:block}.nav-components,.nav-directives,.phon-image,.phons-image,.reflection-image,.section-from-left:after,.section-from-left:before,.section-from-right:after,.section-from-right:before{display:none}.nav-components{margin-right:3.125em}.btn{width:100%}.banner-message{max-width:100%}.section-from-left,.section-from-right{padding-left:1.25em;padding-right:1.25em}.section-wrap{min-height:0;-moz-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.section-message{-moz-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
